---
- hosts: ubuntu01 #contra quien opero
  remote_user: root #con que usuario entro
  order: inventory #reverse_inventory | sorted | reverse_sorted | shuffle (lo hace secuencial de 5 een 5)
  vars: #variables
    variable1: hola amigo
    variable2: 22
    variable3: 
      subvalor1: 1
      subvalor2: 2
  tasks: #comenzamos a definir tareas
    - name: Mi primera tarea #aqui empieza la primera tarea
      debug:
       msg: "{{ variable1 }}, voy a comenzar una tarea"
    - name: Mi segunda tarea #aqui empieza otra tarea
      debug: #unsafe permite escribir un texto literal sin variable
       msg: !unsafe "El ninja va todo con dobles llaves {{ aqui va mi variable }}"
    - name: Mi tercera tarea #aqui empieza otra tarea
      debug: 
       msg: "{{ variable1 }}, voy a comenzar la tarea {{ numerotarea }}, en el servidor {{ sistema }} {{ sistema2 }}"
      vars: #puedo definir variables a nivel de tarea
       numerotarea: 3
    - name: Mi cuarta tarea #aqui empieza otra tarea
      debug:
       msg: "Valores del diccionario {{ variable3.subvalor2 }}"
    - name: Mi tarea de facts #aqui empieza otra tarea para obtener facts
      debug:
       #msg: "{{ ansible_facts }}"
       var: ansible_facts
  
  #mi primera tarea condicional
    - name: Mi tarea condicional
      debug:
       msg: "He entrado!!!!!!"
      when: 
        - ansible_facts.distribution == 'Ubuntu'
        - variable2 == 22
    #una tarea normalita
    - name: Mi tarea normalita
      debug:
       msg: "Me ejecuto normalmente"
      changed_when: True
      notify: tarea opcional #esto es para llamar a otra tarea, en este caso cuando haga change, saltarÃ¡ a la tarea opcional
      
    - name: Mi tarea normalita 2
      debug:
       msg: "Me ejecuto normalmente"
      changed_when: True
      notify: mievento
    
    - name: Mi tarea explosiva #una tarea que explota
      shell:
        cmd: umane
      ignore_errors: True
      failed_when: explosiva.rc > 100
      register: explosiva #registra la salida en una variable
    
    - name: Otra tarea
      debug:
        msg: "{{ explosiva.stdout }}"
      when: explosiva.rc == 0
      
    #tarea comprobadora
    - name: una tarea que comprueba un texto
      debug:
        msg: la salida de error de la tarea explosiva contiene 'not found'
      #when: "'found' not in explosiva.stderr"
      #when: explosiva.stderr is match(".*not.*")
      when: explosiva.stderr is search(".*not.*")
      
    # nuestra primera tarea en bucle!!  
    - name: primer bucle
      debug:
        msg: "Ahora voy a hacer algo con el puerto: {{ item }}"
      loop: "{{ puertos }}"
      vars:
        puertos:
          - 80
          - 81
          - 83
          
    - name: listar procesadores
      debug:
        msg: "Veamos las CPUs: {{ item | upper }}"
      loop: "{{ansible_facts.processor}}"
      loop_control:
        index_var: cpus
      when: (cpus+1) % 3 == 0
      
    - name: algo
      debug:
        msg: "Hola k ase"
      tags:
        - instalaciones
        - preparacion
        
    - name: varias tareas a ejecutar de golpe
      block:
        - name: primera tarea del bloque
          debug:
            msg: "Hola k ase"
        
        - name: segunda tarea del bloque
          debug:
            msg: "y tu k ase"
      
      rescue:
        - name: tarea de rescate, en caso de que se produzca un error en la de dentro del block
          debug:
            msg: "Hola k ase"
      always:
        - name: Tarea que se va a ejecutar despues del block y/o despues del rescue
          debug:
            msg: "Hola k ase"
      
  handlers: #esto se utiliza cuando la tarea que llama realiza una accion, por lo que si no hace un change, no saltan. son tareas ejecutadas cuando otra las llama.
    #una tarea opcional
    - name: tarea opcional
      debug:
       msg: "Me ejecuto opcionalmente"
      listen: mievento
      
    - name: tarea opcional 2
      debug:
       msg: "Me ejecuto opcionalmente"
      listen: mievento
      
    